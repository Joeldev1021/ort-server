apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    ort-server.service: analyzer-worker
  name: analyzer-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      ort-server.service: analyzer-worker
  template:
    metadata:
      labels:
        ort-server.service: analyzer-worker
    spec:
      initContainers:
        - name: init-postgres
          image: busybox:latest
          command: [ 'sh', '-c', "until nslookup postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for postgres; sleep 2; done" ]
        - name: init-artemis
          image: busybox:latest
          command: [ 'sh', '-c', "until nslookup artemis.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for artemis; sleep 2; done" ]
      containers:
        - env:
            - name: DB_URL
              value: jdbc:postgresql://postgres:5433
            - name: DB_NAME
              value: ort_server
            - name: DB_SCHEMA
              value: ort_server
            - name: DB_USERNAME
              value: postgres
            - name: DB_PASSWORD
              value: postgres
            - name: DB_SSLMODE
              value: disable
            - name: ANALYZER_RECEIVER_TRANSPORT_SERVER_URI
              value: "amqp://artemis:61616"
            - name: ORCHESTRATOR_SENDER_TRANSPORT_SERVER_URI
              value: "amqp://artemis:61616"
          image: ort-server-analyzer-worker
          imagePullPolicy: Never
          # TODO: Add liveness probe.
          name: analyzer-worker
      restartPolicy: Always
