# TODO: add a persistent volume with local storage.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    ort.server.service: postgres
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    ort-server.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      ort-server.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        ort-server.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: ort_server
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: postgres:14
          livenessProbe:
            exec:
              command: [ 'sh', '-c', 'exec pg_isready -U "postgres"' ]
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: postgres
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db
      restartPolicy: Always
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    ort-server.service: postgres
  name: postgres
spec:
  # With the help of `minikube tunnel` and a small change in the hosts file, this allows to have the same domain/port
  # as in the cluster.
  type: LoadBalancer
  ports:
    - name: "5433"
      port: 5433
      targetPort: 5432
  selector:
    ort-server.service: postgres
