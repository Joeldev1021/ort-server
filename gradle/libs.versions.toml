# Copyright (C) 2022 The ORT Project Authors (See <https://github.com/oss-review-toolkit/ort-server/blob/main/NOTICE>)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

[versions]
buildConfigPlugin = "3.1.0"
detektPlugin = "1.21.0"
kotlinPlugin = "1.7.10"
kotlinxSerialization = "1.3.3"
versionCatalogUpdatePlugin = "0.5.3"
versionsPlugin = "0.42.0"

exposed = "0.39.2"
flyway = "9.1.4"
hikari = "5.0.1"
kotest = "5.4.2"
kotestAssertionsKtor = "1.0.3"
koin = "3.2.0"
kotestExtensionTestContainers = "1.3.4"
ktor = "2.1.0"
logback = "1.2.11"
ort = "1ca71eb3c2"
postgres = "42.5.0"
testContainers = "1.17.3"

[plugins]
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfigPlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detektPlugin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinPlugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlinPlugin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinPlugin" }
versionCatalogUpdate = { id = "nl.littlerobots.version-catalog-update", version.ref = "versionCatalogUpdatePlugin" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }

[libraries]
exposedCore = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposedDao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposedJavaTime = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposedJdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
flywayCore = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
koinKtor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koinTest = { module = "io.insert-koin:koin-test", version.ref = "koin" }
kotestAssertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotestAssertionsKtor = { module = "io.kotest.extensions:kotest-assertions-ktor", version.ref = "kotestAssertionsKtor" }
kotestExtensionsTestContainer = { module = "io.kotest.extensions:kotest-extensions-testcontainers", version.ref = "kotestExtensionTestContainers" }
kotestRunnerJunit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlinPlugin" }
kotlinxSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization"}
ktorServerContentNegotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktorKotlinxSerialization = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }
ktorServerCallLogging = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktorServerCommon = { module = "io.ktor:ktor-server-host-common-jvm", version.ref = "ktor" }
ktorServerCore = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktorServerDefaultHeaders = { module = "io.ktor:ktor-server-default-headers-jvm", version.ref = "ktor" }
ktorServerNetty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktorServerStatusPages = { module = "io.ktor:ktor-server-status-pages-jvm", version.ref = "ktor" }
ktorServerTestHost = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktorClientContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktorServerTestsJvm = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
ort = { module = "com.github.oss-review-toolkit:ort", version.ref = "ort" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
testContainersPostgresql = { module = "org.testcontainers:postgresql", version.ref = "testContainers" }
testContainers = { module = "org.testcontainers:testcontainers", version.ref = "testContainers" }
