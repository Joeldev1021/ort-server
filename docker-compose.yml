# Copyright (C) 2022 The ORT Project Authors (See <https://github.com/oss-review-toolkit/ort-server/blob/main/NOTICE>)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

version: "3.9"
services:
  postgres:
    image: postgres:14
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ort_server
    ports:
    # Use port 5433 on the host to avoid a conflict with a running postgres instance on the host.
    - "5433:5432"
    volumes:
    - db:/var/lib/postgresql/data

  artemis:
    profiles:
      - artemis
    image: quay.io/artemiscloud/activemq-artemis-broker:artemis.2.26.0
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', ' ~/broker/bin/artemis check queue --name analyzer_queue']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      # 'relax-jolokia' allows to connect to the Artemis Console at http://localhost:8161/console/
      AMQ_EXTRA_ARGS: "--relax-jolokia --queues analyzer_queue:anycast"
      AMQ_USER: admin
      AMQ_PASSWORD: admin
    ports:
      - "8161:8161"
      - "61616:61616"

  rabbitmq:
    profiles:
      - rabbitmq
    # Setting the hostname is necessary for persistence.
    # See https://www.futurefundamentals.com/set-rabbitmq-with-data-persistent-with-docker-compose/.
    hostname: ort-server-rabbitmq
    image: rabbitmq:3.11.7
    restart: unless-stopped
    # See https://www.rabbitmq.com/monitoring.html#health-checks
    healthcheck:
      test: [ 'CMD-SHELL', 'rabbitmq-diagnostics check_running' ]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - type: bind
        source: ./scripts/docker/rabbitmq/
        target: /etc/rabbitmq/

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.3
    restart: unless-stopped
    entrypoint: /opt/keycloak_init/init-keycloak.sh
    command:
    - "start-dev"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 90s
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_URL: "jdbc:postgresql://postgres:5432/ort_server"
      KC_HEALTH_ENABLED: "true"
    ports:
    - "8081:8080"
    volumes:
    - type: bind
      source: ./scripts/docker/keycloak/
      target: /opt/keycloak_init/

  core:
    image: ort-server-core
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 http://localhost:8080/api/v1/liveness" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      DB_URL: "jdbc:postgresql://postgres:5432"
      DB_NAME: ort_server
      DB_SCHEMA: ort_server
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_SSLMODE: disable
      JWT_URI: "http://keycloak:8080/realms/master/protocol/openid-connect/certs"
      ORCHESTRATOR_SENDER_TRANSPORT_TYPE: rabbitMQ
      ORCHESTRATOR_SENDER_TRANSPORT_SERVER_URI: "amqp://rabbitmq:5672"
      ORCHESTRATOR_SENDER_TRANSPORT_QUEUE_NAME: orchestrator_queue
      ORCHESTRATOR_SENDER_TRANSPORT_USERNAME: admin
      ORCHESTRATOR_SENDER_TRANSPORT_PASSWORD: admin

  orchestrator:
    image: ort-server-orchestrator
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DB_URL: "jdbc:postgresql://postgres:5432"
      DB_NAME: ort_server
      DB_SCHEMA: ort_server
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_SSLMODE: disable
      ORCHESTRATOR_RECEIVER_TRANSPORT_TYPE: rabbitMQ
      ORCHESTRATOR_RECEIVER_TRANSPORT_SERVER_URI: "amqp://rabbitmq:5672"
      ORCHESTRATOR_RECEIVER_TRANSPORT_QUEUE_NAME: orchestrator_queue
      ORCHESTRATOR_RECEIVER_TRANSPORT_USERNAME: admin
      ORCHESTRATOR_RECEIVER_TRANSPORT_PASSWORD: admin
      ANALYZER_SENDER_TRANSPORT_TYPE: rabbitMQ
      ANALYZER_SENDER_TRANSPORT_SERVER_URI: "amqp://rabbitmq:5672"
      ANALYZER_SENDER_TRANSPORT_QUEUE_NAME: analyzer_queue
      ANALYZER_SENDER_TRANSPORT_USERNAME: admin
      ANALYZER_SENDER_TRANSPORT_PASSWORD: admin
      ADVISOR_SENDER_TRANSPORT_TYPE: rabbitMQ
      ADVISOR_SENDER_TRANSPORT_SERVER_URI: "amqp://rabbitmq:5672"
      ADVISOR_SENDER_TRANSPORT_QUEUE_NAME: advisor_queue
      ADVISOR_SENDER_TRANSPORT_USERNAME: admin
      ADVISOR_SENDER_TRANSPORT_PASSWORD: admin

  analyzer-worker:
    image: ort-server-analyzer-worker
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DB_URL: "jdbc:postgresql://postgres"
      DB_NAME: ort_server
      DB_SCHEMA: ort_server
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_SSLMODE: disable
      ORCHESTRATOR_SENDER_TRANSPORT_TYPE: rabbitMQ
      ORCHESTRATOR_SENDER_TRANSPORT_SERVER_URI: "amqp://rabbitmq:5672"
      ORCHESTRATOR_SENDER_TRANSPORT_QUEUE_NAME: orchestrator_queue
      ORCHESTRATOR_SENDER_TRANSPORT_USERNAME: admin
      ORCHESTRATOR_SENDER_TRANSPORT_PASSWORD: admin
      ANALYZER_RECEIVER_TRANSPORT_TYPE: rabbitMQ
      ANALYZER_RECEIVER_TRANSPORT_SERVER_URI: "amqp://rabbitmq:5672"
      ANALYZER_RECEIVER_TRANSPORT_QUEUE_NAME: analyzer_queue
      ANALYZER_RECEIVER_TRANSPORT_USERNAME: admin
      ANALYZER_RECEIVER_TRANSPORT_PASSWORD: admin

  advisor-worker:
    image: ort-server-advisor-worker
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DB_URL: "jdbc:postgresql://postgres"
      DB_NAME: ort_server
      DB_SCHEMA: ort_server
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_SSLMODE: disable
      ORCHESTRATOR_SENDER_TRANSPORT_TYPE: rabbitMQ
      ORCHESTRATOR_SENDER_TRANSPORT_SERVER_URI: "amqp://rabbitmq:5672"
      ORCHESTRATOR_SENDER_TRANSPORT_QUEUE_NAME: orchestrator_queue
      ORCHESTRATOR_SENDER_TRANSPORT_USERNAME: admin
      ORCHESTRATOR_SENDER_TRANSPORT_PASSWORD: admin
      ADVISOR_RECEIVER_TRANSPORT_TYPE: rabbitMQ
      ADVISOR_RECEIVER_TRANSPORT_SERVER_URI: "amqp://rabbitmq:5672"
      ADVISOR_RECEIVER_TRANSPORT_QUEUE_NAME: advisor_queue
      ADVISOR_RECEIVER_TRANSPORT_USERNAME: admin
      ADVISOR_RECEIVER_TRANSPORT_PASSWORD: admin

volumes:
  db:
    driver: local
