@startuml
entity LICENSE_SPDX {
<<from result_shared>>
* id: SERIAL
}

entity ORT_ISSUE {
<<from result_shared>>
* id: SERIAL
}

entity SCANNER_DETAILS {
* id: SERIAL
--
* name: VARCHAR(64)
* version: VARCHAR(32)
* configuration: TEXT
}

entity PROVENANCE {
* id: SERIAL
--
sourceArtifactUrl: VARCHAR(256)
sourceArtifactHashValue: VARCHAR(256)
sourceArtifactHashAlgorithm: VARCHAR(16)
vcsRepository: INT
vcsRevision: VARCHAR(128)
vcsPath: VARCHAR(256)
resolvedRevision: VARCHAR(128)
}

entity LICENSE_FINDING {
* id: SERIAL
--
* fkResult: INT
* license: INT
* path: VARCHAR(256)
* startLine: INT
* endLine: INT
* score: REAL
}

entity COPYRIGHT_FINDING {
* id: SERIAL
--
* fkResult: INT
* statement: TEXT
* path: VARCHAR(256)
* startLine: INT
* endLine: INT
}

entity SCAN_RESULT_ISSUE {
* id: SERIAL
--
* fkScanResult: INT
* fkIssue: INT
}

entity PACKAGE_SCAN_RESULT {
* id: SERIAL
--
* type: VARCHAR(32)
namespace: VARCHAR(256)
name: VARCHAR(256)
version: VARCHAR(64)
fkScanResult: INT
fkScannerRun: INT
}

entity SCAN_RESULT {
* id: SERIAL
--
* fkProvenance: INT
* fkDetails: INT
* startTime: TIMESTAMP
* endTime: TIMESTAMP
* packageVerificationCode: VARCHAR(128)
}

entity SCANNER_RUN {
* id: SERIAL
--
* startTime: TIMESTAMP
* endTime: TIMESTAMP
* fkEnvironment: INT
* config: JSONB
}

LICENSE_FINDING::license -- LICENSE_SPDX::id
LICENSE_FINDING::fkResult -- SCAN_RESULT::id

COPYRIGHT_FINDING::fkResult -- SCAN_RESULT::id

SCAN_RESULT_ISSUE::fkScanResult -- SCAN_RESULT::id
SCAN_RESULT_ISSUE::fkIssue -- ORT_ISSUE::id

PACKAGE_SCAN_RESULT::fkScanResult -- SCAN_RESULT::id
PACKAGE_SCAN_RESULT::fkScannerRun -- SCANNER_RUN::id

SCAN_RESULT::fkProvenance -- PROVENANCE::id
SCAN_RESULT::fkDetails -- SCANNER_DETAILS::id
@enduml
