@startuml
actor User as user

rectangle request [
Trigger request
{{json
{
  "revision": "main",
  "analyzer": {
    "parameters": {
       "javaVersion": "17"
    }
  },
  "scanner": {},
  "evaluator": {},
  "labels": {
    "foo": "bar"
  }
}
}}
]

artifact "Validation script" as script

rectangle output [
Resolved Config
{{json
{
  "analyzerJobConfiguration": {},
  "scannerJobConfiguration": {},
  "evaluatorJobConfiguration": {},
  "labels": {
    "foo": "bar",
    "transport:kubernetes:imageTagSuffix": "java17"
  }
}
}}
]

artifact orchestrator as "Orchestrator"

rectangle message [
Message
{{json
{
  "header": {
    "token": "xxxxx",
    "traceId": "yyyy",
    "ortRunId": 42,
    "properties": {
      "kubernetes:imageTagSuffix": "java17"
    }
  },
  "payload": {}
}
}}
]

artifact kubeTransport as "Kubernetes Transport"

rectangle kubeTransportConfig [
Config
{{json
{
  "namespace": "ort-server",
  "imageName": "my-registry:ort-server-analyzer:${imageTagSuffix}-latest"
}
}}
]

collections container as "my-registry:ort-server-analyzer:java17-latest""

user -> request: sends
request --> script
script -> output: generates
output --> orchestrator
orchestrator -> message: sends
message --> kubeTransport
kubeTransport <- kubeTransportConfig: reads
kubeTransport --> container: launches

@enduml
