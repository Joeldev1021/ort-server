configManager {
  secretProvider = ${?ADVISOR_SECRET_PROVIDER}
  configSecretFileList = ${?ADVISOR_SECRET_FILES}
  allowSecretsFromConfig = ${?ALLOW_SECRETS_FROM_CONFIG}

  fileProvider = ${?ADVISOR_CONFIG_FILE_PROVIDER}
  gitHubRepositoryOwner = ${?ADVISOR_CONFIG_GITHUB_REPOSITORY_OWNER}
  gitHubRepositoryName = ${?ADVISOR_CONFIG_GITHUB_REPOSITORY_NAME}
}

database {
  host = "localhost"
  host = ${?DB_HOST}
  port = 5432
  port = ${?DB_PORT}
  name = "ort"
  name = ${?DB_NAME}
  schema = "ort_server"
  schema = ${?DB_SCHEMA}
  username = "postgres"
  username = ${?DB_USERNAME}
  password = "postgres"
  password = ${?DB_PASSWORD}
  poolsize = 5
  poolsize = ${?DB_POOLSIZE}
  sslmode = "verify-full"
  sslmode = ${?DB_SSLMODE}
  sslcert = ${?DB_SSLCERT}
  sslkey = ${?DB_SSLKEY}
  sslrootcert = ${?DB_SSLROOTCERT}
}

advisor {
  receiver {
    type = "kubernetes"
    type = ${?ADVISOR_RECEIVER_TRANSPORT_TYPE}
    serverUri = "amqp://localhost:61616"
    serverUri = ${?ADVISOR_RECEIVER_TRANSPORT_SERVER_URI}
    queueName = "advisor_queue"
    queueName = ${?ADVISOR_RECEIVER_TRANSPORT_QUEUE_NAME}
    username = "username"
    username = ${?ADVISOR_RECEIVER_TRANSPORT_USERNAME}
    password = "password"
    password = ${?ADVISOR_RECEIVER_TRANSPORT_PASSWORD}
  }
}

orchestrator {
  sender {
    type = "activeMQ"
    type = ${?ORCHESTRATOR_SENDER_TRANSPORT_TYPE}
    serverUri = "amqp://localhost:61616"
    serverUri = ${?ORCHESTRATOR_SENDER_TRANSPORT_SERVER_URI}
    queueName = "orchestrator_queue"
    queueName = ${?ORCHESTRATOR_SENDER_TRANSPORT_QUEUE_NAME}
    username = "username"
    username = ${?ORCHESTRATOR_SENDER_TRANSPORT_USERNAME}
    password = "password"
    password = ${?ORCHESTRATOR_SENDER_TRANSPORT_PASSWORD}
  }
}
