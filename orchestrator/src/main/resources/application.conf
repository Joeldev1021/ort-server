database {
  url = "jdbc:postgresql://localhost:5432"
  url = ${?DB_URL}
  name = "ort"
  name = ${?DB_NAME}
  schema = "ort_server"
  schema = ${?DB_SCHEMA}
  username = "postgres"
  username = ${?DB_USERNAME}
  password = "postgres"
  password = ${?DB_PASSWORD}
  poolsize = 5
  poolsize = ${?DB_POOLSIZE}
  sslmode = "verify-full"
  sslmode = ${?DB_SSLMODE}
  sslcert = ${?DB_SSLCERT}
  sslkey = ${?DB_SSLKEY}
  sslrootcert = ${?DB_SSLROOTCERT}
}

orchestrator {
  receiver {
    type = "activeMQ"
    type = ${?ORCHESTRATOR_RECEIVER_TRANSPORT_TYPE}
    serverUri = "amqp://localhost:61616"
    serverUri = ${?ORCHESTRATOR_RECEIVER_TRANSPORT_SERVER_URI}
    queueName = "orchestrator_queue"
    queueName = ${?ORCHESTRATOR_RECEIVER_TRANSPORT_QUEUE_NAME}
    username = "username"
    username = ${?ORCHESTRATOR_RECEIVER_TRANSPORT_USERNAME}
    password = "password"
    password = ${?ORCHESTRATOR_RECEIVER_TRANSPORT_PASSWORD}
  }
}
analyzer {
  sender {
    type = "kubernetes"
    type = ${?ANALYZER_SENDER_TRANSPORT_TYPE}
    namespace = "ort-server"
    namespace = ${?ANALYZER_SENDER_TRANSPORT_NAMESPACE}
    imageName = "ort-server-analyzer-worker"
    imageName = ${?ANALYZER_SENDER_TRANSPORT_IMAGE_NAME}
    username = "username"
    username = ${?ANALYZER_SENDER_TRANSPORT_USERNAME}
    password = "password"
    password = ${?ANALYZER_SENDER_TRANSPORT_PASSWORD}
  }
}
